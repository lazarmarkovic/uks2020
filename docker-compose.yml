version: '3.2'
services:
    uks_db:
        restart: always
        image: postgres
        container_name: uks_db
        volumes:
            - ./pgdata:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=devdevdev

    uks_redis:
        image: redis
        container_name: uks_redis
        expose:
            - "6379"
          
    uks_backend:
        image: lazamarkovic/uks_backend:latest
        container_name: uks_backend
        labels:
            com.example.service: "web"
            com.example.description: "Use for the main web process"
        ports:
            - 8000:8000
        links:
            - uks_redis
        depends_on:
            - uks_redis
            - uks_db
            - es
            - kibana
        logging:
            driver: "json-file"
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=devdevdev

    uks_frontend:
        image: lazamarkovic/uks_frontend:latest
        container_name: uks_frontend
        depends_on:
            - uks_backend
        ports:
            - 8080:80


    # ELK stack for logging
    es:
        labels:
            com.example.service: "es"
            com.example.description: "For searching and indexing data"
        image: elasticsearch:5.4
        container_name: uks_es
        volumes:
            - ./esdata:/usr/share/elasticsearch/data/
        ports:
            - "9200:9200"
            - "9300:9300"
        environment:
            ES_JAVA_OPTS: "-Xmx256m -Xms256m"

    kibana:
        labels:
            com.example.service: "kibana"
            com.example.description: "Data visualisation and for log aggregation"
        image: kibana:5.4.3
        container_name: uks_kibana
        ports:
            - "5601:5601"
        environment:
            - ELASTICSEARCH_URL=http://es:9200
        depends_on:
            - es

    logstash:
        labels:
            com.example.service: "logstash"
            com.example.description: "For logging data"
        image: logstash:5.4.3
        container_name: uks_logstash
        volumes:
            - ./config/logstash:/logstash_dir
        command: logstash -f /logstash_dir/logstash.conf
        depends_on:
            - es
        environment:
            LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        ports:
            - "5959:5959"



    # TICK stack for metrics and grafana for visualisation
    influxdb:
        container_name: uks_influxdb
        image: influxdb:1.0.2
        ports:
            - "8083:8083"
            - "8086:8086"
        volumes:
            - ./influxdb:/var/lib/influxdb
        restart: always

    grafana:
        container_name: uks_grafana
        image: grafana/grafana:4.3.2
        ports:
            - "3000:3000"
        links:
            - influxdb
        restart: always

    telegraf:
        container_name: uks_telegraf
        image: telegraf:1.3.3
        volumes:
            - ./config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
            - /var/run/docker.sock:/var/run/docker.sock
        restart: always
